/**
* SpeechToText
* This is an API for a Speech-to-Text component.
*
* The version of the OpenAPI document: 0.1.0
* Contact: norman.jansen@fkie.fraunhofer.de
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Error.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::speechtotext::server::model
{

Error::Error()
{
    m_Error_message = "";
    m_Error_messageIsSet = false;
    m_DetailIsSet = false;
    
}

void Error::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::speechtotext::server::helpers::ValidationException(msg.str());
    }
}

bool Error::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool Error::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "Error" : pathPrefix;

            
    return success;
}

bool Error::operator==(const Error& rhs) const
{
    return
    
    
    
    ((!errorMessageIsSet() && !rhs.errorMessageIsSet()) || (errorMessageIsSet() && rhs.errorMessageIsSet() && getErrorMessage() == rhs.getErrorMessage())) &&
    
    
    ((!detailIsSet() && !rhs.detailIsSet()) || (detailIsSet() && rhs.detailIsSet() && getDetail() == rhs.getDetail()))
    
    ;
}

bool Error::operator!=(const Error& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const Error& o)
{
    j = nlohmann::json::object();
    if(o.errorMessageIsSet())
        j["error_message"] = o.m_Error_message;
    if(o.detailIsSet())
        j["detail"] = o.m_Detail;
    
}

void from_json(const nlohmann::json& j, Error& o)
{
    if(j.find("error_message") != j.end())
    {
        j.at("error_message").get_to(o.m_Error_message);
        o.m_Error_messageIsSet = true;
    } 
    if(j.find("detail") != j.end())
    {
        j.at("detail").get_to(o.m_Detail);
        o.m_DetailIsSet = true;
    } 
    
}

std::string Error::getErrorMessage() const
{
    return m_Error_message;
}
void Error::setErrorMessage(std::string const& value)
{
    m_Error_message = value;
    m_Error_messageIsSet = true;
}
bool Error::errorMessageIsSet() const
{
    return m_Error_messageIsSet;
}
void Error::unsetError_message()
{
    m_Error_messageIsSet = false;
}
nlohmann::json Error::getDetail() const
{
    return m_Detail;
}
void Error::setDetail(nlohmann::json const& value)
{
    m_Detail = value;
    m_DetailIsSet = true;
}
bool Error::detailIsSet() const
{
    return m_DetailIsSet;
}
void Error::unsetDetail()
{
    m_DetailIsSet = false;
}


} // namespace org::openapitools::speechtotext::server::model

