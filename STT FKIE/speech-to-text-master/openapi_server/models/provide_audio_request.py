from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ProvideAudioRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, length=None, sample_rate_hz=None, timestamp=None, byte_array=None):  # noqa: E501
        """ProvideAudioRequest - a model defined in OpenAPI

        :param length: The length of this ProvideAudioRequest.  # noqa: E501
        :type length: int
        :param sample_rate_hz: The sample_rate_hz of this ProvideAudioRequest.  # noqa: E501
        :type sample_rate_hz: int
        :param timestamp: The timestamp of this ProvideAudioRequest.  # noqa: E501
        :type timestamp: int
        :param byte_array: The byte_array of this ProvideAudioRequest.  # noqa: E501
        :type byte_array: str
        """
        self.openapi_types = {
            'length': int,
            'sample_rate_hz': int,
            'timestamp': int,
            'byte_array': str
        }

        self.attribute_map = {
            'length': 'length',
            'sample_rate_hz': 'sample_rate_hz',
            'timestamp': 'timestamp',
            'byte_array': 'byte_array'
        }

        self._length = length
        self._sample_rate_hz = sample_rate_hz
        self._timestamp = timestamp
        self._byte_array = byte_array

    @classmethod
    def from_dict(cls, dikt) -> 'ProvideAudioRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The provide_audio_request of this ProvideAudioRequest.  # noqa: E501
        :rtype: ProvideAudioRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def length(self) -> int:
        """Gets the length of this ProvideAudioRequest.

        length of the audio in bytes.  # noqa: E501

        :return: The length of this ProvideAudioRequest.
        :rtype: int
        """
        return self._length

    @length.setter
    def length(self, length: int):
        """Sets the length of this ProvideAudioRequest.

        length of the audio in bytes.  # noqa: E501

        :param length: The length of this ProvideAudioRequest.
        :type length: int
        """

        self._length = length

    @property
    def sample_rate_hz(self) -> int:
        """Gets the sample_rate_hz of this ProvideAudioRequest.

        sample rate in hz.  # noqa: E501

        :return: The sample_rate_hz of this ProvideAudioRequest.
        :rtype: int
        """
        return self._sample_rate_hz

    @sample_rate_hz.setter
    def sample_rate_hz(self, sample_rate_hz: int):
        """Sets the sample_rate_hz of this ProvideAudioRequest.

        sample rate in hz.  # noqa: E501

        :param sample_rate_hz: The sample_rate_hz of this ProvideAudioRequest.
        :type sample_rate_hz: int
        """

        self._sample_rate_hz = sample_rate_hz

    @property
    def timestamp(self) -> int:
        """Gets the timestamp of this ProvideAudioRequest.

        timestamp of the start of the audio samples  # noqa: E501

        :return: The timestamp of this ProvideAudioRequest.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: int):
        """Sets the timestamp of this ProvideAudioRequest.

        timestamp of the start of the audio samples  # noqa: E501

        :param timestamp: The timestamp of this ProvideAudioRequest.
        :type timestamp: int
        """

        self._timestamp = timestamp

    @property
    def byte_array(self) -> str:
        """Gets the byte_array of this ProvideAudioRequest.

        base64 encoded binary content.  # noqa: E501

        :return: The byte_array of this ProvideAudioRequest.
        :rtype: str
        """
        return self._byte_array

    @byte_array.setter
    def byte_array(self, byte_array: str):
        """Sets the byte_array of this ProvideAudioRequest.

        base64 encoded binary content.  # noqa: E501

        :param byte_array: The byte_array of this ProvideAudioRequest.
        :type byte_array: str
        """

        self._byte_array = byte_array
