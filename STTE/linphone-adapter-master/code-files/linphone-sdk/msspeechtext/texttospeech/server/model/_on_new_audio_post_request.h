/**
* TextToSpeech
* This is an API for a Text-to-Speech component.
*
* The version of the OpenAPI document: 0.1.0
* Contact: norman.jansen@fkie.fraunhofer.de
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * _on_new_audio_post_request.h
 *
 * 
 */

#ifndef _on_new_audio_post_request_H_
#define _on_new_audio_post_request_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::texttospeech::server::model
{

/// <summary>
/// 
/// </summary>
class  _on_new_audio_post_request
{
public:
    _on_new_audio_post_request();
    virtual ~_on_new_audio_post_request() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const _on_new_audio_post_request& rhs) const;
    bool operator!=(const _on_new_audio_post_request& rhs) const;

    /////////////////////////////////////////////
    /// _on_new_audio_post_request members

    /// <summary>
    /// length of the audio in bytes.
    /// </summary>
    int32_t getLength() const;
    void setLength(int32_t const value);
    bool lengthIsSet() const;
    void unsetLength();
    /// <summary>
    /// sample rate in hz.
    /// </summary>
    int32_t getSampleRateHz() const;
    void setSampleRateHz(int32_t const value);
    bool sampleRateHzIsSet() const;
    void unsetSample_rate_hz();
    /// <summary>
    /// timestamp of the start of the audio samples in ms
    /// </summary>
    int64_t getTimestamp() const;
    void setTimestamp(int64_t const value);
    bool timestampIsSet() const;
    void unsetTimestamp();
    /// <summary>
    /// 
    /// </summary>
    std::string getMessageId() const;
    void setMessageId(std::string const& value);
    bool messageIdIsSet() const;
    void unsetMessage_id();
    /// <summary>
    /// base64 encoded binary content.
    /// </summary>
    std::string getByteArray() const;
    void setByteArray(std::string const& value);
    bool byteArrayIsSet() const;
    void unsetByte_array();

    friend  void to_json(nlohmann::json& j, const _on_new_audio_post_request& o);
    friend  void from_json(const nlohmann::json& j, _on_new_audio_post_request& o);
protected:
    int32_t m_Length;
    bool m_LengthIsSet;
    int32_t m_Sample_rate_hz;
    bool m_Sample_rate_hzIsSet;
    int64_t m_Timestamp;
    bool m_TimestampIsSet;
    std::string m_Message_id;
    bool m_Message_idIsSet;
    std::string m_Byte_array;
    bool m_Byte_arrayIsSet;
    
};

} // namespace org::openapitools::texttospeech::server::model

#endif /* _on_new_audio_post_request_H_ */
