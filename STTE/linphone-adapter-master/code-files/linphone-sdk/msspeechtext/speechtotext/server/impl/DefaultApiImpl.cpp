/**
* SpeechToText
* This is an API for a Speech-to-Text component.
*
* The version of the OpenAPI document: 0.1.0
* Contact: norman.jansen@fkie.fraunhofer.de
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#include "mediastreamer2/mscommon.h"
#include "DefaultApiImpl.h"
#include "../include/speechtotext/MessageBuffer.h"

namespace org::openapitools::speechtotext::server::api {

    using namespace org::openapitools::speechtotext::server::model;

    DefaultApiImpl::DefaultApiImpl(const std::shared_ptr<Pistache::Rest::Router> &rtr)
            : DefaultApi(rtr) {
    }

    void DefaultApiImpl::initialize(const std::optional<std::string> &speechtotextVariant,
                                    const std::optional<std::string> &configProfile,
                                    const std::optional<std::string> &webhookUrl,
                                    Pistache::Http::ResponseWriter &response) {
        ms_message("Norman: speechtotext-initialize - Do not use - is a dummy function");
        response.send(Pistache::Http::Code::Ok);
    }

    void DefaultApiImpl::on_new_text_post(const _on_new_text_post_request &onNewTextPostRequest,
                                          Pistache::Http::ResponseWriter &response) {
        ms_message("speechtotext-on_new_text_post: %s", onNewTextPostRequest.getText().data());

        // put message in buffer
        org::openapitools::speechtotext::server::api::text_message msg = {
                onNewTextPostRequest.getTimestampStart(),
                onNewTextPostRequest.getTimestampEnd(),
                onNewTextPostRequest.getText()
        };
        MessageBuffer::getInstance().add_message(msg);

        response.send(Pistache::Http::Code::Ok);
    }

    void DefaultApiImpl::provide_audio(const Provide_audio_request &provideAudioRequest,
                                       Pistache::Http::ResponseWriter &response) {
        ms_message("Norman: speechtotext-provide_audio - Do not use - is a dummy function");
        response.send(Pistache::Http::Code::Ok);
    }

}

